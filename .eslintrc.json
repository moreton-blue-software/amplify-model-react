{
  "env": {
    "es6": true,
    "browser": true,
    "jest/globals": true,
    "node": true,
    "cypress/globals": true
  },
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true,
      "classes": true,
      "experimentalObjectRestSpread": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:cypress/recommended"
  ],
  "plugins": ["jest", "react-hooks", "cypress"],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "react/prop-types": 0,
    "react/display-name": 0,
    "react/no-multi-comp": "warn",
    "react/no-string-refs": "error",
    "react/no-unused-state": "error",
    "react/no-unused-prop-types": "error",
    "react/jsx-max-depth": ["warn", { "max": 3 }],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/boolean-prop-naming": [
      "error",
      {
        "rule": "^(is|has)[A-Z]([A-Za-z0-9]?)+",
        "message": "It is better if your prop ({{ propName }}) matches this pattern: ({{ pattern }})"
      }
    ],
    "react/no-typos": "error",
    "react/no-this-in-sfc": "error",
    "prefer-const": "error",
    "no-duplicate-imports": [
      "error",
      {
        "includeExports": true
      }
    ],
    "rest-spread-spacing": ["error", "never"],
    "semi": ["error", "always"],
    "quotes": ["error", "single"],
    "jsx-quotes": ["error", "prefer-double"],
    "prefer-spread": ["error"],
    "no-useless-call": ["error"],
    "no-trailing-spaces": ["error"],
    "space-before-blocks": ["error", "always"],
    "no-unused-vars": ["error"],
    "no-floating-decimal": ["error"],
    "comma-dangle": ["error", "never"],
    "array-bracket-spacing": ["error", "never"],
    "object-curly-spacing": ["error", "always"],
    "switch-colon-spacing": [
      "error",
      {
        "after": true,
        "before": false
      }
    ],
    "space-unary-ops": [
      "error",
      {
        "words": true,
        "nonwords": false
      }
    ],
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "never",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "keyword-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ],
    "key-spacing": [
      "error",
      {
        "singleLine": {
          "beforeColon": false,
          "afterColon": true,
          "mode": "strict"
        },
        "multiLine": {
          "beforeColon": false,
          "afterColon": true,
          "mode": "strict"
        }
      }
    ],
    "generator-star-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ]
  }
}
